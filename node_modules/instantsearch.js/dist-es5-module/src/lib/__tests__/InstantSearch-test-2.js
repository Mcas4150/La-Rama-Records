'use strict';

var _sinon = require('sinon');

var _sinon2 = _interopRequireDefault(_sinon);

var _InstantSearch = require('../InstantSearch');

var _InstantSearch2 = _interopRequireDefault(_InstantSearch);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var appId = 'appId';

// import algoliaSearchHelper from 'algoliasearch-helper';

var apiKey = 'apiKey';
var indexName = 'lifecycle';

describe('InstantSearch lifecycle', function () {
  it('calls the provided searchFunction when used', function () {
    var searchFunctionSpy = _sinon2.default.spy(function (h) {
      h.setQuery('test').search();
    });

    var fakeClient = {
      search: _sinon2.default.spy(),
      addAlgoliaAgent: function addAlgoliaAgent() {}
    };

    var search = new _InstantSearch2.default({
      appId: appId,
      apiKey: apiKey,
      indexName: indexName,
      searchFunction: searchFunctionSpy,
      createAlgoliaClient: function createAlgoliaClient() {
        return fakeClient;
      }
    });

    expect(searchFunctionSpy.callCount).toBe(0);
    expect(fakeClient.search.callCount).toBe(0);

    search.start();

    expect(searchFunctionSpy.callCount).toBe(1);
    expect(search.helper.state.query).toBe('test');
    expect(fakeClient.search.callCount).toBe(1);
  });
});