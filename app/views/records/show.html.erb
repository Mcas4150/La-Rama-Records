<div class="container">
  <div class="two_columns">
      <div class="card" style="max-width: 250px; "><img  id="myImg" src= '<%= @release["images"][0]['uri'] %>' style= "height: 350px; width: 350px; margin-bottom: 10px;" >

          <div id="myModal" class="modal">

  <!-- The Close Button -->
  <span class="close" onclick="document.getElementById('myModal').style.display='none'">&times;</span>

  <!-- Modal Content (The Image) -->
  <img class="modal-content" id="img01" style="border-radius: 10px;">

  <!-- Modal Caption (Image Text) -->
  <div id="caption"></div>
</div>
     <div style="font-size: 30px;"><%= link_to 'Back', inventory_records_path %></div>
    </div>

      <div class="card-contents" style = "top:50px; width:50vw">
        <h1><%= @release["title"] %></h1>
        <p>Artist: <%= @release["artists"][0]['name'] %></p>
        <p>Label: <%= @release["labels"][0]['name'] %></p>
        <p>Catno: <%= @release["labels"][0]['catno'] %></p>
        <p>Country: <%= @release["country"] %></p>
        <p>Year: <%= @release["year"] %></p>
        <p>Genre: <%= @release["styles"].pop  %></p>
        <p><% @release["tracklist"].each do |track|%>
          <li> <%= track['position'] %> | <%=track["title"] %>  <%= track["duration"] %> </li>
        <% end %>
        </p>
        <div style="font-size:30px; padding:15px;">
          <%= form_tag orders_path do %>
          <%= hidden_field_tag 'record_id', @release.id %>
          <%= submit_tag 'Add to Cart', class: 'btn btn-cool' %>
        <% end %>

     </div>


    <% @video_uris = [] %>
<% @release["videos"].each do |vid| %>
  <% @video_uris << vid["uri"].split('=')[-1] %>
<% end %>





<div id="player"></div>
    <script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');
      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var videoIDs = [];

      <% @video_uris.each do |uri| %>


        videoIDs.push("<%= uri %>");
        <% p uri %>
      <% end %>



      var player, currentVideoId = 0;

      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '390',
          width: '640',

          videoId: videoIDs[currentVideoId],

          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }
      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.loadVideoById(videoIDs[currentVideoId]);
      }
      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.ENDED) {
            currentVideoId++;
            if (currentVideoId < videoIDs.length) {
                player.loadVideoById(videoIDs[currentVideoId]);
            }
        }
    }
    </script>



  </div>


</div>




</div>
