<div class="main">
  <div class="container cut">
    <div class="row showpanel">
      <div class="card col-xs-12 col-sm-4 zoomrecord">
        <div class="video">
          <div class="video__youtube" data-youtube>
            <img src="<%= @record.photo rescue nil%>" class="video__placeholder" />
            <button class="video__button" data-youtube-button="https://www.youtube.com/embed/<%= @record.youtubeid.partition('=').last rescue nil%>"></button>
          </div>
        </div>
      </div>

      <div class="card-contents col-xs-12 col-sm-4 description">
        <h1><%= @record.name rescue nil%></h1>
        <p>Artist: <%= @record.artist rescue nil%></p>
        <p>Label: <%= @record.label rescue nil%></p>
        <p>Catno: <%= @record.catno rescue nil%></p>
        <p>Country: <%= @record.country rescue nil %></p>
        <p>Genre: <%= @record.genre  rescue nil%></p>
        <p>Year: <%= @record.year rescue nil%></p>
      </div>

      <div class="card-contents col-xs-12 col-sm-3 col-lg-4 tracks">
        <div class="centering">
          <table class="tracktable">
            <% reality = @discogs.get_release(@record.release_id) rescue nil%>
            <% reality["tracklist"].each do |track|%>
              <tr>
                <td><%= track["position"] rescue nil %></td>
                <td><%= track["title"] rescue nil %></td>
              </tr>
            <% end %>
          </table>
        </div>
        <div class="row centers">
          <div class="col-xs-6 money"> <%= humanized_money_with_symbol(@record.price_cents) rescue nil %>
          </div>
          <div class="col-xs-6 add">
            <%= form_tag crate_records_path do %>
              <%= hidden_field_tag 'record_id', @record.id rescue nil%>
              <%= hidden_field_tag 'cart', true %>
              <%= submit_tag 'Add to Cart', class: 'btn btn-cool' %>
            <% end %>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="record-list">
    <%= render "records_list" %>
  </div>

</div>

<script>


    (function (window) {

    'use strict';

    window.code = window.code || {};

    window.code.lightweightYoutubePlayer = function () {

        var dataYoutubeVideos = '[data-youtube]';

        var youtubeVideos = [...document.querySelectorAll(dataYoutubeVideos)];

        function init() {
            youtubeVideos.forEach(function(element) {
                bindYoutubeVideoEvent(element);
            });
        }

        function bindYoutubeVideoEvent(element) {
            var button = element.querySelector('[data-youtube-button]');

            button.addEventListener('click', createIframe);
        }

        function createIframe(event) {
            var url = event.target.dataset.youtubeButton;
            var youtubePlaceholder = event.target.parentNode;

            var htmlString = '<div class="video__youtube"> <iframe class="video__iframe" src="' + url + '?autoplay=1" frameborder="0" allowfullscreen></iframe></div>';

            youtubePlaceholder.style.display = 'none';
            youtubePlaceholder.insertAdjacentHTML('beforebegin', htmlString);
            youtubePlaceholder.parentNode.removeChild(youtubePlaceholder);
        }

        return {
           init: init
        }
    };

})(window)

ready();

function ready() {
    var lightweightYoutubePlayer = new code.lightweightYoutubePlayer()

    if (document.readyState != 'loading') {
        page.init()
    } else {
        document.addEventListener('DOMContentLoaded', lightweightYoutubePlayer.init);
    }
}

</script>
